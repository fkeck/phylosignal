// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// moranTest
List moranTest(NumericVector xr, NumericMatrix Wr, unsigned int reps);
RcppExport SEXP _phylosignal_moranTest(SEXP xrSEXP, SEXP WrSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Wr(WrSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(moranTest(xr, Wr, reps));
    return rcpp_result_gen;
END_RCPP
}
// kTest
List kTest(NumericVector xr, NumericMatrix vcvr, unsigned int reps);
RcppExport SEXP _phylosignal_kTest(SEXP xrSEXP, SEXP vcvrSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vcvr(vcvrSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(kTest(xr, vcvr, reps));
    return rcpp_result_gen;
END_RCPP
}
// kStarTest
List kStarTest(NumericVector xr, NumericMatrix vcvr, unsigned int reps);
RcppExport SEXP _phylosignal_kStarTest(SEXP xrSEXP, SEXP vcvrSEXP, SEXP repsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vcvr(vcvrSEXP);
    Rcpp::traits::input_parameter< unsigned int >::type reps(repsSEXP);
    rcpp_result_gen = Rcpp::wrap(kStarTest(xr, vcvr, reps));
    return rcpp_result_gen;
END_RCPP
}
// pagelLogLik
double pagelLogLik(double lambda, NumericVector xr, NumericMatrix vcvr);
RcppExport SEXP _phylosignal_pagelLogLik(SEXP lambdaSEXP, SEXP xrSEXP, SEXP vcvrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type vcvr(vcvrSEXP);
    rcpp_result_gen = Rcpp::wrap(pagelLogLik(lambda, xr, vcvr));
    return rcpp_result_gen;
END_RCPP
}
// mantelStat
double mantelStat(NumericMatrix xr, NumericMatrix Wr);
RcppExport SEXP _phylosignal_mantelStat(SEXP xrSEXP, SEXP WrSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type xr(xrSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type Wr(WrSEXP);
    rcpp_result_gen = Rcpp::wrap(mantelStat(xr, Wr));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_phylosignal_moranTest", (DL_FUNC) &_phylosignal_moranTest, 3},
    {"_phylosignal_kTest", (DL_FUNC) &_phylosignal_kTest, 3},
    {"_phylosignal_kStarTest", (DL_FUNC) &_phylosignal_kStarTest, 3},
    {"_phylosignal_pagelLogLik", (DL_FUNC) &_phylosignal_pagelLogLik, 3},
    {"_phylosignal_mantelStat", (DL_FUNC) &_phylosignal_mantelStat, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_phylosignal(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
